name: CI
on:
  pull_request:
  push:
    branches: [ main, master ]

jobs:
  node-ci:
    name: Node CI (auto-detect)
    runs-on: ubuntu-latest
    # Only run if a Node project is present
    if: ${{ hashFiles('package.json') != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: pm
        shell: bash
        run: |
          if [[ -f pnpm-lock.yaml ]]; then echo "pm=pnpm" >> "$GITHUB_OUTPUT"; exit 0; fi
          if [[ -f yarn.lock ]]; then echo "pm=yarn" >> "$GITHUB_OUTPUT"; exit 0; fi
          if [[ -f package-lock.json ]] || [[ -f package.json ]]; then echo "pm=npm" >> "$GITHUB_OUTPUT"; exit 0; fi
          echo "pm=none" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm (if needed)
        if: ${{ steps.pm.outputs.pm == 'pnpm' }}
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          # dynamic cache based on detected PM: npm | yarn | pnpm
          cache: ${{ steps.pm.outputs.pm }}

      - name: Install
        run: |
          case "${{ steps.pm.outputs.pm }}" in
            pnpm) pnpm install --frozen-lockfile ;;
            yarn) yarn install --frozen-lockfile ;;
            npm)  npm ci || npm install ;;
            *)    echo "No recognized package manager"; exit 1 ;;
          esac

      - name: Typecheck
        run: |
          TYPECHECK=$(node -e "try{p=require('./package.json').scripts||{};console.log(p.typecheck||'')}catch(e){console.log('')}")
          if [[ -n "$TYPECHECK" ]]; then
            echo "Running: $TYPECHECK"
            bash -lc "$TYPECHECK"
          else
            echo "No typecheck script; skipping"
          fi

      - name: Lint
        run: |
          LINT=$(node -e "try{p=require('./package.json').scripts||{};console.log(p.lint||'')}catch(e){console.log('')}")
          if [[ -n "$LINT" ]]; then
            echo "Running: $LINT"
            bash -lc "$LINT"
          else
            echo "No lint script; skipping"
          fi

      - name: Test
        run: |
          TEST=$(node -e "try{p=require('./package.json').scripts||{};console.log(p.test||'')}catch(e){console.log('')}")
          if [[ -n "$TEST" ]]; then
            echo "Running: $TEST"
            bash -lc "$TEST"
          else
            echo "No test script; skipping"
          fi

      - name: Build (optional)
        run: |
          BUILD=$(node -e "try{p=require('./package.json').scripts||{};console.log(p.build||'')}catch(e){console.log('')}")
          if [[ -n "$BUILD" ]]; then
            echo "Running: $BUILD"
            bash -lc "$BUILD"
          else
            echo "No build script; skipping"
          fi
